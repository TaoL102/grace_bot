using GraceBot.Models;
using Microsoft.Bot.Connector;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace GraceBot
{
    internal interface IDbManager
    {
        /// <summary>
        /// Add an activity in database as an asynchronous operation when the activity is generated by the bot.
        /// </summary>
        /// <param name="activity">The activity to be updated in database.</param>
        /// <param name="processStatus">The process status of the activity.</param>
        /// <returns></returns>
        Task AddActivity(Activity activity, ProcessStatus processStatus = ProcessStatus.BotMessage);

        /// <summary>
        /// Update an activity in database as an asynchronous operation given the activity and its process status.
        /// </summary>
        /// <param name="activity">The activity to be updated in database.</param>
        /// <param name="processStatus">The process status of the activity.</param>
        /// <returns></returns>
        Task UpdateActivity(Activity activity, ProcessStatus? processStatus = null);

        /// <summary>
        /// Return a list of activities which stand for unprocessed questions.
        /// </summary>
        /// <returns></returns>
        List<Activity> FindUnprocessedQuestions();

        /// <summary>
        /// Return an activity given the ID.
        /// </summary>
        /// <param name="id">the ID of an activity</param>
        /// <returns></returns>
        Activity FindActivity(string id);
    }
}
